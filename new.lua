--!/usr/bin/env lua
-- (ANIMATION GRABBER) This LocalScript gets the animation IDs from the current character
-- and formats them into a ready-to-use Lua table.

local Players = game:GetService("Players")
local character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Wait a moment for all character scripts, including animations, to load
task.wait(2)

local function generateAnimationDataTable()
    print("--- Generating Animation Data Table... ---")

    -- For animations, GetAppliedDescription is the most direct and reliable source.
    local description = humanoid:GetAppliedDescription()

    -- Define the list of animation properties we want to get
    local animationProperties = {
        "WalkAnimation",
        "RunAnimation",
        "JumpAnimation",
        "FallAnimation",
        "IdleAnimation",
        "SwimAnimation",
        "ClimbAnimation",
    }

    -- Start building the Lua table as a string
    local outputString = [[
-- This animation data was generated by the in-game inspection script.
-- Paste this entire table into the Roblox Studio model builder script.

local animationData = {
]]

    -- Loop through the properties and add them to the string
    for _, propName in ipairs(animationProperties) do
        local assetId = description[propName] or 0 -- Use 0 if the property doesn't exist
        local line = string.format("    %s = %d,\n", propName, assetId)
        outputString = outputString .. line
    end

    outputString = outputString .. "}"

    -- Print the final result and copy to clipboard
    print(outputString)
    if setclipboard then
        setclipboard(outputString)
        print("\n--- ✅ Animation data table copied to clipboard! ---")
    else
        warn("\n--- ⚠️ setclipboard is not available. Manually copy the table above. ---")
    end
end

generateAnimationDataTable()
